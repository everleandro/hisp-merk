name: Build iOS App

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependencias
        run: |
          npm ci
          npm run generate

      - name: Instalar Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Agregar plataforma iOS
        run: npx cap add ios

      - name: Instalar CocoaPods
        run: |
          cd ios/App
          pod install

      - name: Configurar certificados y firma
        env:
          APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          CERT_PATH=$RUNNER_TEMP/apple_certificate.p12
          PROFILE_PATH=$RUNNER_TEMP/profile.mobileprovision

          echo "$APPLE_CERTIFICATE_BASE64" | base64 --decode -o $CERT_PATH
          echo "$APPLE_PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PROFILE_PATH

          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import $CERT_PATH -P "$APPLE_CERTIFICATE_PASSWORD" -A
          security list-keychains -d user -s build.keychain
          security set-keychain-settings -lut 21600
          security find-identity -v

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Configurar firma manual
        run: |
          echo "Aplicando configuración de firma manual..."
          
          # Comprobar si DEVELOPMENT_TEAM y PROVISIONING_PROFILE_SPECIFIER están en el archivo, si no, añadirlas
          if ! /usr/libexec/PlistBuddy -c "Print :targets" ios/App/App.xcodeproj/project.pbxproj > /dev/null 2>&1; then
            echo "targets no encontrados, creando la configuración necesaria..."
            
            # Agregar DEVELOPMENT_TEAM
            /usr/libexec/PlistBuddy -c "Add :targets:0:buildConfigurationList:0:buildConfigurations:0:buildSettings:DEVELOPMENT_TEAM string ${{ secrets.APPLE_TEAM_ID }}" ios/App/App.xcodeproj/project.pbxproj

            # Agregar PROVISIONING_PROFILE_SPECIFIER
            /usr/libexec/PlistBuddy -c "Add :targets:0:buildConfigurationList:0:buildConfigurations:0:buildSettings:PROVISIONING_PROFILE_SPECIFIER string ${{ secrets.PROVISIONING_PROFILE_NAME }}" ios/App/App.xcodeproj/project.pbxproj
          
          else
            echo "Claves ya existen, actualizando valores..."
            # Si ya existe, actualizar las claves
            /usr/libexec/PlistBuddy -c "Set :targets:0:buildConfigurationList:0:buildConfigurations:0:buildSettings:DEVELOPMENT_TEAM ${{ secrets.APPLE_TEAM_ID }}" ios/App/App.xcodeproj/project.pbxproj
            /usr/libexec/PlistBuddy -c "Set :targets:0:buildConfigurationList:0:buildConfigurations:0:buildSettings:PROVISIONING_PROFILE_SPECIFIER ${{ secrets.PROVISIONING_PROFILE_NAME }}" ios/App/App.xcodeproj/project.pbxproj
          fi

          # Configurar CODE_SIGN_STYLE para firma manual
          /usr/libexec/PlistBuddy -c "Set :targets:0:buildConfigurationList:0:buildConfigurations:0:buildSettings:CODE_SIGN_STYLE Manual" ios/App/App.xcodeproj/project.pbxproj

      - name: Verificar configuración aplicada
        run: |
          echo "DEVELOPMENT_TEAM:"
          grep DEVELOPMENT_TEAM ios/App/App.xcodeproj/project.pbxproj
          echo "PROVISIONING_PROFILE_SPECIFIER:"
          grep PROVISIONING_PROFILE_SPECIFIER ios/App/App.xcodeproj/project.pbxproj


      - name: Compilar app iOS
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
        run: |
          cd ios/App
          xcodebuild clean archive \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -archivePath $RUNNER_TEMP/App.xcarchive \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
            PROVISIONING_PROFILE_SPECIFIER=""

      - name: Exportar IPA
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/App.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $RUNNER_TEMP/Build \
            -allowProvisioningUpdates

      - name: Subir IPA como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: iOS-App
          path: ${{ runner.temp }}/Build/*.ipa
