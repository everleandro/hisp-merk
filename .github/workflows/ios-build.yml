name: Build iOS App

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependencias
        run: |
          npm ci
          npm run generate

      - name: Agregar sync iOS
        run: npx cap sync ios

      - name: Configurar certificados y firma
        env:
          APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          CERT_PATH=$RUNNER_TEMP/apple_certificate.p12
          PROFILE_PATH=$RUNNER_TEMP/profile.mobileprovision

          echo "$APPLE_CERTIFICATE_BASE64" | base64 --decode -o $CERT_PATH
          echo "$APPLE_PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PROFILE_PATH

          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import $CERT_PATH -P "$APPLE_CERTIFICATE_PASSWORD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
          security list-keychains -d user -s build.keychain
          security set-keychain-settings -lut 21600
          security find-identity -v

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Verificar certificados
        run: security find-identity -v -p codesigning

      - name: Instalar CocoaPods
        run: |
          cd ios/App
          pod install

      - name: Reemplazar variables en exportOptions.plist
        env:
          APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
          PROVISIONING_NAME: ${{ secrets.PROVISIONING_PROFILE_NAME }}
        run: |
          sed -i '' 's|${APPLE_BUNDLE_ID}|'"${APPLE_BUNDLE_ID}"'|g' ios/App/exportOptions.plist
          sed -i '' 's|${PROVISIONING_PROFILE_NAME}|'"${PROVISIONING_PROFILE_NAME}"'|g' ios/App/exportOptions.plist

      - name: Verificar contenido de exportOptions.plist
        run: cat ios/App/exportOptions.plist

      - name: Compilar app iOS
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
        run: |
          cd ios/App
          xcodebuild clean archive \
            -workspace App.xcworkspace \
            -scheme Capacitor \
            -configuration Release \
            -archivePath $GITHUB_WORKSPACE/build/App.xcarchive \
            DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
            CODE_SIGN_IDENTITY="Apple Distribution" \

        # 7. Exportar el archivo IPA
      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $GITHUB_WORKSPACE/build/App.xcarchive \
            -exportPath $GITHUB_WORKSPACE/build/App \
            -exportOptionsPlist ios/App/exportOptions.plist \
            -allowProvisioningUpdates \
            -verbose

      - name: Subir IPA como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: iOS-App
          path: ${{ runner.temp }}/Build/*.ipa
