name: Build iOS App

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependencias
        run: |
          npm ci
          npm run generate

      - name: Instalar Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Agregar plataforma iOS
        run: npx cap add ios

      - name: Configurar certificados y firma
        env:
          APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          CERT_PATH=$RUNNER_TEMP/apple_certificate.p12
          PROFILE_PATH=$RUNNER_TEMP/profile.mobileprovision

          echo "$APPLE_CERTIFICATE_BASE64" | base64 --decode -o $CERT_PATH
          echo "$APPLE_PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PROFILE_PATH

          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import $CERT_PATH -P "$APPLE_CERTIFICATE_PASSWORD" -A
          security list-keychains -d user -s build.keychain
          security set-keychain-settings -lut 21600
          security find-identity -v

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PROFILE_PATH ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Configurar firma automática en Xcode
        run: |
          # Forzar firma automática para todos los targets de la app
          # Asegurarse de que la app use firma automática
          sed -i '' 's/CODE_SIGN_STYLE = Manual/CODE_SIGN_STYLE = Automatic/g' ios/app/App.xcodeproj/project.pbxproj
          sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = .*/PROVISIONING_PROFILE_SPECIFIER = ""/g' ios/app/App.xcodeproj/project.pbxproj
          sed -i '' 's/CODE_SIGN_IDENTITY = .*/CODE_SIGN_IDENTITY = "iPhone Developer"/g' ios/app/App.xcodeproj/project.pbxproj

          # Asegurarse de que los pods usen firma automática
          sed -i '' 's/CODE_SIGN_STYLE = Manual/CODE_SIGN_STYLE = Automatic/g' ios/app/Pods/Pods.xcodeproj/project.pbxproj
          sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = .*/PROVISIONING_PROFILE_SPECIFIER = ""/g' ios/app/Pods/Pods.xcodeproj/project.pbxproj
          sed -i '' 's/CODE_SIGN_IDENTITY = .*/CODE_SIGN_IDENTITY = "iPhone Developer"/g' ios/app/Pods/Pods.xcodeproj/project.pbxproj

      - name: Editar Podfile para habilitar firma automática
        run: |
          sed -i '' '/post_install/a\
          post_install do |installer|\
            installer.pods_project.targets.each do |target|\
              if target.name == "Capacitor" || target.name == "CapacitorCordova"\
                target.build_configurations.each do |config|\
                  config.build_settings["CODE_SIGN_IDENTITY"] = "Apple Distribution"\
                  config.build_settings["PROVISIONING_PROFILE_SPECIFIER"] = "Automatic"\
                end\
              end\
            end\
          end\
          ' ios/App/Podfile

          sed -i '' '/post_install/ i\
          assertDeploymentTarget(installer)\
          ' ios/App/Podfile


      - name: Instalar CocoaPods
        run: |
          cd ios/App
          pod install

      - name: Compilar app iOS
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
        run: |
          cd ios/App
          xcodebuild clean archive \
            -workspace App.xcworkspace \
            -scheme Capacitor \
            -configuration Release \
            -archivePath $RUNNER_TEMP/App.xcarchive \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
            PROVISIONING_PROFILE_SPECIFIER= ""

      - name: Exportar IPA
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/App.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $RUNNER_TEMP/Build \
            -allowProvisioningUpdates

      - name: Subir IPA como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: iOS-App
          path: ${{ runner.temp }}/Build/*.ipa
